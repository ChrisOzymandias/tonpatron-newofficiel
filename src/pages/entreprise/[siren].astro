---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../utils/supabaseClient.js';

export async function get({ params }) {
  const siren = params.siren;
  let entreprise = null;
  let error = null;
  let debug = '';

  // 1. Chercher dans Supabase
  let { data, error: supabaseError } = await supabase
    .from('entreprises')
    .select('*')
    .eq('siren', siren)
    .maybeSingle();

  if (supabaseError) {
    error = `Erreur Supabase: ${supabaseError.message}`;
    debug += `Erreur Supabase: ${supabaseError.message}\n`;
  }

  if (data) {
    entreprise = data;
    debug += 'Fiche trouvée dans Supabase.\n';
  } else {
    // 2. Sinon, fetch depuis l’API
    try {
      const res = await fetch(`https://recherche-entreprises.api.gouv.fr/entreprises/${siren}`);
      if (!res.ok) throw new Error('Entreprise non trouvée');
      const apiData = await res.json();
      if (apiData && apiData.entreprise) {
        // On insère la fiche brute dans Supabase
        const { data: newData, error: insertError } = await supabase
          .from('entreprises')
          .insert([
            {
              siren: siren,
              nom_raison_sociale: apiData.entreprise.nom_raison_sociale || apiData.entreprise.nom_complet || null,
              data: apiData.entreprise
            }
          ])
          .select()
          .single();
        if (insertError) {
          error = `Erreur lors de l'insertion Supabase: ${insertError.message}`;
          debug += `Erreur lors de l'insertion Supabase: ${insertError.message}\n`;
        } else {
          entreprise = newData;
          debug += 'Fiche créée depuis l’API et insérée dans Supabase.\n';
        }
      } else {
        error = 'Données API invalides';
        debug += 'Données API invalides\n';
      }
    } catch (e) {
      error = e.message;
      debug += `Erreur API: ${e.message}\n`;
    }
  }

  return { props: { siren, entreprise, error, debug } };
}

const { entreprise, siren, error, debug } = Astro.props;

const title = entreprise && (entreprise.nom_raison_sociale || entreprise.data?.nom_complet)
  ? `Fiche ${entreprise.nom_raison_sociale || entreprise.data?.nom_complet}`
  : `Entreprise SIREN ${siren}`;
const description = entreprise && (entreprise.nom_raison_sociale || entreprise.data?.nom_complet)
  ? `Informations sur ${entreprise.nom_raison_sociale || entreprise.data?.nom_complet}`
  : `Fiche entreprise SIREN ${siren}`;

const jsonLd = entreprise ? {
  "@context": "https://schema.org",
  "@type": "Organization",
  "name": entreprise.nom_raison_sociale || entreprise.data?.nom_complet,
  "address": entreprise.data?.siege?.adresse,
  "identifier": siren,
  "url": `https://tonpatron.fr/entreprise/${siren}`
} : null;
---
<Layout title={title} description={description}>
  <main class="max-w-xl mx-auto bg-white rounded-xl shadow-lg p-8 mt-16 mb-12">
    {import.meta.env.DEV && debug && (
      <pre class="bg-gray-100 text-xs text-gray-600 p-2 rounded mb-4">{debug}</pre>
    )}
    {entreprise && jsonLd && (
      <script type="application/ld+json">
        {JSON.stringify(jsonLd)}
      </script>
    )}
    {error || !entreprise ? (
      <section class="text-center">
        <h1 class="text-3xl font-extrabold text-red-700 mb-4">Entreprise introuvable</h1>
        <p class="text-gray-700">Aucune donnée pour le SIREN {siren}</p>
      </section>
    ) : (
      <>
        <h1 class="text-3xl font-extrabold text-blue-700 mb-4">{entreprise.nom_raison_sociale || entreprise.data?.nom_complet}</h1>
        <div class="mb-4 text-gray-700">{entreprise.data?.siege?.adresse || 'Adresse inconnue'}</div>
        <div class="flex flex-wrap gap-2 mt-2">
          <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-semibold">SIREN : {siren}</span>
          {entreprise.data?.siege?.code_postal && <span class="bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-xs font-semibold">CP : {entreprise.data.siege.code_postal}</span>}
          {entreprise.data?.siege?.libelle_commune && <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-xs font-semibold">Commune : {entreprise.data.siege.libelle_commune}</span>}
          {entreprise.data?.categorie_entreprise && <span class="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-xs font-semibold">Catégorie : {entreprise.data.categorie_entreprise}</span>}
          {entreprise.data?.date_creation && <span class="bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-xs font-semibold">Créée le : {entreprise.data.date_creation}</span>}
          {entreprise.data?.activite_principale && <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-semibold">APE : {entreprise.data.activite_principale}</span>}
          {entreprise.data?.tranche_effectif_salarie && <span class="bg-pink-100 text-pink-800 px-3 py-1 rounded-full text-xs font-semibold">Effectif : {entreprise.data.tranche_effectif_salarie}</span>}
          {entreprise.data?.nombre_etablissements && <span class="bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-xs font-semibold">Établissements : {entreprise.data.nombre_etablissements}</span>}
          {entreprise.data?.etat_administratif && <span class="bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-semibold">Statut : {entreprise.data.etat_administratif === 'A' ? 'Actif' : 'Cessé'}</span>}
        </div>
      </>
    )}
  </main>
</Layout>