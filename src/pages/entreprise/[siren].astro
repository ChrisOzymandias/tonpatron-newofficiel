---
import { Astro } from 'astro';
import { supabase } from '../../utils/supabaseClient';

export async function getStaticPaths() {
  // On ne pré-génère aucune page, elles seront générées à la volée (SSG fallback)
  return [];
}

export async function get({ params }) {
  const siren = params.siren;
  const apiUrl = `https://recherche-entreprises.api.gouv.fr/entreprises/${siren}`;
  let data = null;
  let notFound = false;
  let error = null;
  try {
    const res = await fetch(apiUrl);
    if (!res.ok) {
      notFound = true;
    } else {
      data = await res.json();
      // On accepte la fiche si le SIREN existe
      if (!data || !data.siren) {
        notFound = true;
        data = null;
      }
    }
  } catch (e) {
    notFound = true;
    error = e.toString();
  }
  // On prépare les infos minimales pour la fiche unique
  let nom = data?.nom_raison_sociale || data?.nom_complet || data?.nom || null;
  let adresse = null;
  if (data?.siege) {
    adresse = [data.siege.adresse_ligne_1, data.siege.libelle_commune, data.siege.code_postal].filter(Boolean).join(', ');
  }
  return {
    props: {
      siren: data?.siren || siren,
      nom,
      adresse,
      notFound,
      error
    }
  };
}

export async function post({ request }) {
  const body = await request.formData();
  const siren = body.get('siren');
  const nom = body.get('nom');
  const adresse = body.get('adresse');
  // Crée la fiche en base si elle n'existe pas déjà
  const { data, error } = await supabase
    .from('entreprises')
    .upsert([{ siren, nom, adresse }], { onConflict: 'siren' });
  return {
    body: JSON.stringify({ success: !error, error })
  };
}
---
<!-- Debug minimal -->
<pre style="background:#f6f8fa;padding:1em;overflow:auto;max-width:100vw;max-height:200px;">{JSON.stringify({params: Astro.params, props: Astro.props}, null, 2)}</pre>

{Astro.props.notFound || Astro.props.error ? (
  <section class="max-w-xl mx-auto bg-white rounded-xl shadow-lg p-8 mt-16 mb-12 text-center">
    <h1 class="text-3xl font-extrabold text-red-700 mb-4">Entreprise introuvable</h1>
    <p class="text-gray-700 mb-2">Impossible d'afficher la fiche de cette entreprise. Elle n'existe pas, a été supprimée, ou une erreur s'est produite lors de la récupération des données.</p>
    {Astro.props.error && <div class="text-xs text-red-500 mt-2">Détail technique : {Astro.props.error}</div>}
    <a href="/entreprises" class="inline-block mt-6 px-5 py-3 bg-blue-600 text-white rounded-lg font-semibold shadow hover:bg-blue-700 transition">Retour à la liste des entreprises</a>
  </section>
) : (
  <section class="max-w-xl mx-auto bg-white rounded-xl shadow-lg p-8 mt-16 mb-12 text-center">
    <h1 class="text-3xl font-extrabold text-blue-700 mb-4">
      {Astro.props.nom
        ? `L'entreprise ${Astro.props.nom} au numéro de SIREN ${Astro.props.siren}`
        : `Entreprise au numéro de SIREN ${Astro.props.siren}`}
    </h1>
    <form method="POST" class="mb-8">
      <input type="hidden" name="siren" value={Astro.props.siren} />
      <label class="block mb-2 font-semibold">Nom de l'entreprise</label>
      <input type="text" name="nom" value={Astro.props.nom || ''} class="border rounded p-2 w-full mb-4" required />
      <label class="block mb-2 font-semibold">Adresse</label>
      <input type="text" name="adresse" value={Astro.props.adresse || ''} class="border rounded p-2 w-full mb-4" required />
      <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Créer ou mettre à jour la fiche</button>
    </form>
    <p class="text-lg text-gray-700 mb-4">
      {Astro.props.adresse
        ? `Située à ${Astro.props.adresse}.`
        : "Adresse inconnue."}
    </p>
    <div class="mt-8">
      <a href={`https://annuaire-entreprises.data.gouv.fr/entreprise/${Astro.props.siren}`} target="_blank" rel="noopener" class="text-blue-600 hover:underline">Voir la fiche officielle</a>
    </div>
  </section>
)}
